cent = 1.5 * c(1, 1, -1, -1, 1, -1, 1, -1)
x = NULL
for (i in 1:8) x = c(x, rnorm(25, mean = cent[i]))
x = matrix(x, ncol = 2)
colnames(x) = c("X1", "X2")
kmeans.ani(x, centers = 4, pch = 1:4, col = 1:4)
}, img.name = "kmeans.ani", htmlfile = "kmeans.ani.html", ani.height = 480, ani.width = 480,
title = "Demonstration of the K-means Cluster Algorithm", description = "Move! Average! Cluster! Move! Average! Cluster! ...")
setwd("~/Cursos Dictados/PCA/Casos")
setwd("~/Cursos Dictados/PCA/Casos")
rm(list=ls())   #borra la memoria
#Lee archivo .txt de DOS
data = read.table("Multiv02 Papel.txt", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
data = read.table("Multiv02 Papel.txt", header=TRUE, sep="\t", na.strings="NA", dec=".", strip.white=TRUE)
head(data)
# Analisis de Componentes Principales de S o R
pca <- princomp(data, cor=TRUE)  #cor=F para S, cor=T para R
source('~/.active-rstudio-document')
install.packages("extRemes")
install.packages(c("igraph", "Rcpp"))
library("WindResource")
library(shiny)
data(wd)
data(wd10)
runApp("~/GitHub/WindResource/inst/shiny")
library("knitr", lib.loc="C:/Users/mbonoli/Documents/R/win-library/3.0")
library(markdown)
install.packages("KernSmooth")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.0.3/library")
install.packages("yaml")
library("WindResource")
library(shiny)
data(wd)
data(wd10)
runApp("~/GitHub/WindResource/inst/shiny")
runGUI(wd10)
library("WindResource")
library(shiny)
data(wd)
data(wd10)
# Esta es la forma de guardar los archivos: save(wd10,file="wd10.rda",compress=TRUE)
runGUI(wd10)
install.packages("fitdistrplus")
library("WindResource")
library(shiny)
data(wd)
data(wd10)
# Esta es la forma de guardar los archivos: save(wd10,file="wd10.rda",compress=TRUE)
runGUI(wd10)
install.packages("roxygen2")
\title{\textbf{M\'{e}todos MIS y POT para estimaci\'{o}n de \emph{Vref} en proyecto de energ\'{i}a e\'{o}lica}}
library("WindResource")
library(shiny)
data(wd)
data(wd10)
runGUI(wd10)
install.packages("devtools")
library(devtools)
install_github("mbonoli/WindResource")
?shuttle
install.packages("MASS")
library("MASS", lib.loc="~/R/win-library/3.1")
?shuttle
data(shuttle)
shuttle
View(shuttle)
?shuttle
logRegRavens <- glm(shuttle$use ~ shuttle$wind,family="binomial")
logReg <- glm(shuttle$use ~ shuttle$wind,family="binomial")
logReg
summary(logReg)
data <- shuttle
data$auto <- as.numeric(data$use=="auto")
View(data)
logReg1 <- glm(data$auto ~ data$wind,family="binomial")
logReg
logReg1
exp(logReg1$coeff)
data$head <- as.numeric(data$wind=="head")
View(data)
logReg1 <- glm(data$auto ~ data$head,family="binomial")
exp(logReg1$coeff)
logReg2 <- glm(data$auto ~ data$head + data$magn,family="binomial")
logReg2
exp(logReg2$coeff)
glm(data$auto ~ data$head,family="binomial")
glm(I(1-data$auto) ~ data$head,family="binomial")
data(InsectSprays)
View(shuttle)
View(data)
data(InsectSprays)
head(InsectSprays)
glm(InsectSprays$count ~ InsectSprays$spray,family="poisson")
data2 <- InsectSprays
data2$spray <- factor(data2$spray, levels = c('B', 'A', 'C','D','E','F')
)
data2$spray
glm(InsectSprays$count ~ InsectSprays$spray,family="poisson",)
glm(InsectSprays$count ~ InsectSprays$spray,family="poisson")
exp(coef(glm(InsectSprays$count ~ InsectSprays$spray,family="poisson")))
1-exp(coef(glm(InsectSprays$count ~ InsectSprays$spray,family="poisson")))
exp(coef(glm(InsectSprays$count ~ InsectSprays$spray,family="poisson")))-1
utils::data(anorexia, package = "MASS")
anorex.1 <- glm(Postwt ~ Prewt + Treat + offset(Prewt),
family = gaussian, data = anorexia)
summary(anorex.1)
anorex.1 <- glm(Postwt ~ Prewt + Treat + Prewt,
family = gaussian, data = anorexia)
glm(Postwt ~ Prewt + Treat + offset(Prewt),
family = gaussian, data = anorexia)
glm(Postwt ~ Prewt + Treat + Prewt,
family = gaussian, data = anorexia)
glm(Postwt ~ Prewt + Treat + offset(Prewt),  family = gaussian, data = anorexia)
glm(Postwt ~ Prewt + Treat + offset(log(10)+Prewt),  family = gaussian, data = anorexia)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
dataOlavarria <- read.csv("~/Investigacion/Vientos/datos/Olavarria.csv", sep=";")
wdOlavarria <- setWd (dataOlavarria,
interval = 1,
date.var = "Fecha",
date.format = "YYYYMMDD",
time.var ="Hora",
time.format = "HHMM",
ane.names = c("Ane1"),
ane.height= NA,
speed.ave.var = "Vel",
speed.min.var = NA,
speed.max.var = NA,
speed.sd.var = NA,
speed.var.var = NA,
speed.unit = NA,
dir.var = "Dir",
dir.unit = "deg",
temp.var = "Temp",
temp.unit = "C",
pres.var = "Pres",
pres.unit = "bar")
library(WindResource)
dataOlavarria <- read.csv("~/Investigacion/Vientos/datos/Olavarria.csv", sep=";")
wdOlavarria <- setWd (dataOlavarria,
interval = 1,
date.var = "Fecha",
date.format = "YYYYMMDD",
time.var ="Hora",
time.format = "HHMM",
ane.names = c("Ane1"),
ane.height= NA,
speed.ave.var = "Vel",
speed.min.var = NA,
speed.max.var = NA,
speed.sd.var = NA,
speed.var.var = NA,
speed.unit = NA,
dir.var = "Dir",
dir.unit = "deg",
temp.var = "Temp",
temp.unit = "C",
pres.var = "Pres",
pres.unit = "bar")
source('~/Investigacion/Vientos/WindResource/R/setWd.R')
dataOlavarria <- read.csv("~/Investigacion/Vientos/datos/Olavarria.csv", sep=";")
wdOlavarria <- setWd (dataOlavarria,
interval = 1,
date.var = "Fecha",
date.format = "YYYYMMDD",
time.var ="Hora",
time.format = "HHMM",
ane.names = c("Ane1"),
ane.height= NA,
speed.ave.var = "Vel",
speed.min.var = NA,
speed.max.var = NA,
speed.sd.var = NA,
speed.var.var = NA,
speed.unit = NA,
dir.var = "Dir",
dir.unit = "deg",
temp.var = "Temp",
temp.unit = "C",
pres.var = "Pres",
pres.unit = "bar")
setwd("~/Investigacion/Vientos/WindResource/data")
save(wdOlavarria, file="~/Investigacion/Vientos/WindResource/data/wdOlavarria.rda")
library(WindResource)
data(wdOlavarria)
quote(x)
library(WindResource)
data(wdOlavarria)
runGUI(wdOlavarria)
str(wdOlavarria)
source('~/Investigacion/Vientos/WindResource/inst/shiny/server.R')
source('~/Investigacion/Vientos/WindResource/inst/shiny/server.R')
source('~/Investigacion/Vientos/WindResource/inst/shiny/server.R')
library(WindResource)
library("WindResource")
data(wdOlavarria)
runGUI(wdOlavarria)
library(WindResource)
data(wdOlavarria)
runGUI(wdOlavarria)
source('~/Investigacion/Vientos/WindResource/R/runGUI.R')
source('~/Investigacion/Vientos/WindResource/inst/shiny/server.R')
source('~/Investigacion/Vientos/WindResource/inst/shiny/server.R')
library(WindResource)
data(wdOlavarria)
runGUI(wdOlavarria)
source('~/Investigacion/Vientos/WindResource/inst/shiny/server.R')
library(WindResource)
data(wdOlavarria)
runGUI(wdOlavarria)
.path.package()
.path.package(WindResource)
.path.package("WindResource")
library("WindResource")
.path.package("WindResource")
path.package("WindResource")
paste(path.package("WindResource"),"/shiny/"
)
paste(path.package("WindResource"),"/shiny/",sep="")
source('~/Investigacion/Vientos/WindResource/R/runGUI.R')
library(WindResource)
data(wdOlavarria)
runGUI(wdOlavarria)
source('~/Investigacion/Vientos/WindResource/R/runGUI.R')
source('~/Investigacion/Vientos/WindResource/R/runGUI.R')
library(WindResource)
data(wdOlavarria)
runGUI(wdOlavarria)
inRS
source('~/Investigacion/Vientos/WindResource/inst/shiny/server.R')
library(WindResource)
data(wdOlavarria)
runGUI(wdOlavarria)
paste(path.package("WindResource"),"/shiny/dataGUIwd.Rd",sep="")
source('~/Investigacion/Vientos/WindResource/inst/shiny/server.R')
library(WindResource)
data(wdOlavarria)
runGUI(wdOlavarria)
library(WindResource)
data(wdOlavarria)
runGUI(wdOlavarria)
source('~/Investigacion/Vientos/WindResource/R/runGUI.R')
source('~/Investigacion/Vientos/WindResource/R/runGUI.R')
data(wdOlavarria)
runGUI(wdOlavarria)
str(wdOlavarria)
dataGUIwd$info$ane$ane.names
source('~/Investigacion/Vientos/WindResource/inst/shiny/server.R')
shiny::runApp('~/Investigacion/Vientos/WindResource/inst/shiny')
library(WindResource)
library("devtools", lib.loc="~/R/win-library/3.1")
library("shinyapps", lib.loc="~/R/win-library/3.1")
secret="kLqNqf1ydCRM9AwspEmKJvL4mORze+CSNH2zM9BK")
shinyapps::setAccountInfo(
name="mbonoli",
token="C72F985E57E42B7B032C0EBB994A51AD",
secret="kLqNqf1ydCRM9AwspEmKJvL4mORze+CSNH2zM9BK")
deployApp()
library(devtools)
install_github("mbonoli/WindResource")
library(devtools)
install_github("mbonoli/WindResource")
library(WindResource)
source('~/.active-rstudio-document', echo=TRUE)
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("rChart")
install.packages("rCharts")
require(devtools) install_github('rCharts', 'ramnathv')
require(devtools)
install_github('rCharts', 'ramnathv')
airquality
dTable(airquality, sPaginationType = "full_numbers")
library("rCharts", lib.loc="~/R/win-library/3.1")
dTable(airquality, sPaginationType = "full_numbers")
install_github("mbonoli/WindResource")
library(WindResource)
library(WindResource)
install_github("mbonoli/WindResource")
library(devtools)
install_github("mbonoli/WindResource")
library("shinyapps", lib.loc="~/R/win-library/3.1")
deployApp()
library("shinyapps", lib.loc="~/R/win-library/3.1")
deployApp()
shiny::runApp()
shiny::runApp()
deployApp()
Y
library(WindResource)
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(WindResource)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
str(wd)
shiny::runApp()
shiny::runApp()
shiny::runApp()
traceback()
shiny::runApp('inst/shiny')
shiny::runApp('inst/shiny')
shiny::runApp()
str(dataGUIwd)
shiny::runApp()
data(wd10)
dataGUIwd <- wd10
str(dataGUIwd)
shiny::runApp()
shiny::runApp()
shiny::runApp('inst/shiny')
shiny::runApp('inst/shiny')
dataGUIwd <- wdOlavarria
str(dataGUIwd)
min(datasetInput()[["time"]]$dt)
min(dataGUIwd[["time"]]$dt)
max(dataGUIwd[["time"]]$dt)
datasetInput()[["ane"]]$ane.names
dataGUIwd[["ane"]]$ane.names
shiny::runApp('inst/shiny')
shiny::runApp('inst/shiny')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('inst/shiny')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
date()
"2012-02-01"
2012-01-01
shiny::runApp()
shiny::runApp()
shiny::runApp()
options(error = browser)
shiny::runApp()
attrib <- list(...)
if (length(attrib)) {
specials <- c(".Dim", ".Dimnames", ".Names", ".Tsp",
".Label")
shiny::runApp()
pos
inherits
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
plotWD (data=wdOlavarria, var="mean", type="histogram", by="none")
shiny::runApp()
plotWD (data=wdOlavarria, var="ave", type="histogram", by="none")
plotWD (data=wdOlavarria, var="mean", type="histogram", by="none")
shiny::runApp()
plotWD (data=wdOlavarria, var="mean", type="histogram", by="none")
plotWD (data=wdOlavarria, var="mean", type="histogram", by="none")
source('~/Investigacion/Vientos/WindResource/R/plotWD.R')
shiny::runApp()
if (!is.null(since)){
date.since <- as.POSIXct(since)
date.to <- as.POSIXct(to)
valid.cases <- (datawd$time$dt >= date.since) & (datawd$time$dt <= date.to) & !is.na(datawd$time$dt)
datawd[["time"]] <- datawd[["time"]][valid.cases,]
datawd[["dir"]] <- datawd[["dir"]][valid.cases,]
for (i in names(datawd[["ane"]])){
datawd[["ane"]][[i]] <- datawd[["ane"]][[i]][valid.cases,]
}
}
month.names<- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
hour.names2 <- c("00:00 - 01:59","02:00 - 03:59","04:00 - 05:59","06:00 - 07:59","08:00 - 09:59","10:00 - 11:59","12:00 - 13:59","14:00 - 15:59","16:00 - 17:59","18:00 - 19:59","20:00 - 21:59","22:00 - 23:59")
hour.names <- pref0(0:23,2)
if (class(datawd) != "windata") stop("Los datos no correponden a la clase 'windata'.")
ane[1]
ane
ane
ane.names
source('~/Investigacion/Vientos/WindResource/R/plotWD.R')
source('~/Investigacion/Vientos/WindResource/R/plotWD.R')
plotWD (data=wdOlavarria, var="mean", type="histogram", by="none")
wdOlavarria$ane$Anem24aMS$ave
wdOlavarria$ane[["Anem24aMS"]]$ave
source('~/Investigacion/Vientos/WindResource/R/plotWD.R')
plotWD (data=wdOlavarria, var="mean", type="histogram", by="none")
ane.names
source('~/Investigacion/Vientos/WindResource/R/plotWD.R')
shiny::runApp()
plotWD (data=wdOlavarria, var="mean", type="histogram", by="none")
shiny::runApp()
plotWD (data=wdOlavarria, var="mean", ane="Anem24bMS", type="histogram", by="month")
shiny::runApp()
ane.names
cat(ane.names)
i
i
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
source('~/Investigacion/Vientos/WindResource/R/plotWD.R')
shiny::runApp()
library("formatR", lib.loc="~/R/win-library/3.1")
tidy.dir("C:/Users/Diego/Documents/GitHub/WindResource/R")
library(devtools)
install_github("mbonoli/WindResource")
###########################################
###########################################
#             setWd                       #
###########################################
dataOlavarria <- read.csv("~/Investigacion/Vientos/datos/Olavarria.csv", sep=";")
shiny::runApp()
install.packages("csvread")
base1 <- read.csv("G:/Deserción/Cohorte_2012_2013/Infper_notaingreso.csv", sep=";", header=TRUE)
base2 <- read.csv("G:/Deserción/Cohorte_2012_2013/Notas_mat_1y2_C2013.csv", sep=";", header=TRUE)
base3 <- read.csv("G:/Deserción/Cohorte_2012_2013/Notas_mat_1y2_C2011_2012.csv", sep=";", header=TRUE)
base4 <- read.csv("G:/Deserción/Cohorte_2012_2013/Total_mat_ap.csv", sep=";", header=TRUE)
head(base4)
table(base4$x2012)
table(base42["x2012"])
table(base2["x2012"])
table(base2["X2012"])
table(base4["X2012"])
sequ2 <- seq(which(names(base3) == "X2012.01023.C.Apro"), ncol(base3), by=7)
for (i in sequ2) {
base3[paste("CantCur",i)] <- 0
base3[paste("CantCur",i)][is.na(base3[i]) & is.na(base3[i+2]) & is.na(base3[i+3])] <- 0
base3[paste("CantCur",i)][(is.na((base3[i+3]) & !is.na(base3[i+2]) & is.na(base3[i]))) | (is.na(base3[i+3]) & is.na(base3[i+2]) & !is.na(base3[i])) | (!is.na(base3[i+3]) & is.na(base3[i+2]) & is.na(base3[i]))] <- 1
base3[paste("CantCur",i)][!is.na(base3[i+3]) & (!is.na(base3[i+2]) | !is.na(base3[i]))] <- 2
base3[paste("CantCur",i)][!is.na(base3[i]) & !is.na(base3[i+2])] <- 2
base3[paste("NotaCur", i)] <- 0
base3[paste("NotaCur", i)][is.na(base3[i]) & is.na(base3[i+2]) & !is.na(base3[i+3])] <- base3[(is.na(base3[i]) & is.na(base3[i+2]) & !is.na(base3[i+3])),i+3]
base3[paste("NotaCur", i)][is.na(base3[i]) & is.na(base3[i+2]) & is.na(base3[i+3]) & base3[i+1]!= "A"] <- 99
base3[paste("NotaCur", i)][is.na(base3[i]) & is.na(base3[i+2]) & is.na(base3[i+3]) & base3[i+1]== "A"] <- "A"
base3[paste("NotaCur", i)][!is.na(base3[i+2])] <- base3[!is.na(base3[i+2]),i+2]
base3[paste("NotaCur", i)][is.na(base3[i+2]) & !is.na(base3[i])] <- base3[(is.na(base3[i+2]) & !is.na(base3[i])),i]
base3[paste("CantF", i)] <- 0
base3[paste("CantF", i)][is.na(base3[i+4]) & is.na(base3[i+6])] <- 0
base3[paste("CantF", i)][(is.na(base3[i+4]) & !is.na(base3[i+6])) | (!is.na(base3[i+4]) & is.na(base3[i+6]))] <- 1
base3[paste("CantF", i)][!is.na(base3[i+4]) & !is.na(base3[i+6])] <- 2
base3[paste("NotaF", i)] <- 0
base3[paste("NotaF", i)][!is.na(base3[i+4])] <- base3[!is.na(base3[i+4]),i+4]
base3[paste("NotaF", i)][is.na(base3[i+4]) & !is.na(base3[i+6])] <- base3[is.na(base3[i+4]) & !is.na(base3[i+6]),i+6]
base3[paste("NotaF", i)][is.na(base3[i+4]) & is.na(base3[i+6]) & base3[i+5]!="A"] <- 99
base3[paste("NotaF", i)][is.na(base3[i+4]) & is.na(base3[i+6]) & base3[i+5]=="A"] <- "A"
}
sequ3 <- seq(which(names(base2) == "X2013.01023.C.Apro"), ncol(base2), by=7)
for (i in sequ3) {
base2[paste("CantCur",i)] <- 0
base2[paste("CantCur",i)][is.na(base2[i]) & is.na(base2[i+2]) & is.na(base2[i+3])] <- 0
base2[paste("CantCur",i)][(is.na((base2[i+3]) & !is.na(base2[i+2]) & is.na(base2[i]))) | (is.na(base2[i+3]) & is.na(base2[i+2]) & !is.na(base2[i])) | (!is.na(base2[i+3]) & is.na(base2[i+2]) & is.na(base2[i]))] <- 1
base2[paste("CantCur",i)][!is.na(base2[i+3]) & (!is.na(base2[i+2]) | !is.na(base2[i]))] <- 2
base2[paste("CantCur",i)][!is.na(base2[i]) & !is.na(base2[i+2])] <- 2
base2[paste("NotaCur", i)] <- 0
base2[paste("NotaCur", i)][is.na(base2[i]) & is.na(base2[i+2]) & !is.na(base2[i+3])] <- base2[(is.na(base2[i]) & is.na(base2[i+2]) & !is.na(base2[i+3])),i+3]
base2[paste("NotaCur", i)][is.na(base2[i]) & is.na(base2[i+2]) & is.na(base2[i+3]) & base2[i+1]!= "A"] <- 99
base2[paste("NotaCur", i)][is.na(base2[i]) & is.na(base2[i+2]) & is.na(base2[i+3]) & base2[i+1]== "A"] <- "A"
base2[paste("NotaCur", i)][!is.na(base2[i+2])] <- base2[!is.na(base2[i+2]),i+2]
base2[paste("NotaCur", i)][is.na(base2[i+2]) & !is.na(base2[i])] <- base2[(is.na(base2[i+2]) & !is.na(base2[i])),i]
base2[paste("CantF", i)] <- 0
base2[paste("CantF", i)][is.na(base2[i+4]) & is.na(base2[i+6])] <- 0
base2[paste("CantF", i)][(is.na(base2[i+4]) & !is.na(base2[i+6])) | (!is.na(base2[i+4]) & is.na(base2[i+6]))] <- 1
base2[paste("CantF", i)][!is.na(base2[i+4]) & !is.na(base2[i+6])] <- 2
base2[paste("NotaF", i)] <- 0
base2[paste("NotaF", i)][!is.na(base2[i+4])] <- base2[!is.na(base2[i+4]),i+4]
base2[paste("NotaF", i)][is.na(base2[i+4]) & !is.na(base2[i+6])] <- base2[is.na(base2[i+4]) & !is.na(base2[i+6]),i+6]
base2[paste("NotaF", i)][is.na(base2[i+4]) & is.na(base2[i+6]) & base2[i+5]!="A"] <- 99
base2[paste("NotaF", i)][is.na(base2[i+4]) & is.na(base2[i+6]) & base2[i+5]=="A"] <- "A"
}
base21 <- base2[-19:-101]
length(base21[,1])
base31 <- base3[-(which(names(base3) == "X2011.01023.C.Apro")) : -(which(names(base3) == "X2012.01035.F.Repr"))]
length(base31[,1])
baseFinal1 <- merge(base21, base31, by="nro_documento")
length(baseFinal1[,1])
baseFinal2 <- merge(baseFinal1, base1, by="nro_documento")
length(baseFinal2[,1])
length(base1[,1])
head(base1)
head(baseFinal2["notafinal"])
baseFinal2["notafinal"]
summary(baseFinal2["notafinal"])
class(baseFinal2["notafinal"])
class(baseFinal2[,"notafinal"])
as.numeric(as.character(baseFinal2[,"notafinal"]))
summary(as.numeric(as.character(baseFinal2[,"notafinal"])))
baseFinal2[baseFinal2["notafinal"]==26]
baseFinal2[baseFinal2["notafinal"]==26,]
