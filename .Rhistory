powerdif <- c(porwerdif, (tabla_marcas[i+1,2] + tabla_marcas[i,2]) / 2 )
prod <- probabi*powerdif
}
enerAnual <- 8760*sum(prod)
enerAnual
wt(wd10, wtgData, ane = 1, model = "E33", inter = 10)
exp <- factor(rep(c(1:3), t=c(15,9,16)))
tr <- factor(c(1,1,1,1,1,2,2,2,2,2,3,3,3,3,3, 1,1,1,2,2,2,3,3,3, 1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4))
val <- c(2,5,7,4,8,9,4,6,8,NA,10,4,5,6, 2,5,7,1,8,9,4,6,8,NA,8,4,5,6, 5,1,4,8,9,4,6,8,NA,3,4,5)
df <- data.frame(exp, tr, val)
df
library("WindResource")
# wd10$dir$ang_16 <- (wd10$dir$sect_16-1)*22.5
# data(wtgData)
# class(wd10)<-"windata"
# dataGUIwd<-wd10
# print(getwd())
# load(file=paste(path.package("WindResource"),"/shiny/dataGUIwd.Rd",sep=""))
data(wdOlavarria)
data(wdMtTom)
data(wd)
data(wd10)
data(wtgData)
#Obter inter de interval minut
wtdata <- list()
wtg <- list()
wtgt <- c()
for (i in ane) {
wtdata[[i]] <- datawd$ane[[i]][[1]][!is.na(datawd$ane[[i]][[1]])]
for (j in model) {
porc <- length(wtdata[[i]])/(525600/inter)
wtg <- data.frame(datawtg[[j]][3])
wtgt <- c(wtgt, sum(wtg[round(wtdata[[i]]), "data.Power"])/porc)
}
}
return(wtgt)
}
wt <- function(datawd, datawtg, ane, model, inter) {
#Obter inter de interval minut
wtdata <- list()
wtg <- list()
wtgt <- c()
for (i in ane) {
wtdata[[i]] <- datawd$ane[[i]][[1]][!is.na(datawd$ane[[i]][[1]])]
for (j in model) {
porc <- length(wtdata[[i]])/(525600/inter)
wtg <- data.frame(datawtg[[j]][3])
wtgt <- c(wtgt, sum(wtg[round(wtdata[[i]]), "data.Power"])/porc)
}
}
return(wtgt)
}
minimo <- min(wd10$ane$ane10$ave, na.rm = TRUE)
maximo <- max(wd10$ane$ane10$ave, na.rm = TRUE)
tabla <- tableWD(wd10, ane="ane10", type="histogram")
marcas <- (tabla[,1] + tabla[,2]) / 2
tablaP <- wtgData$E48$data
tabla_marcas <- data.frame()
for (i in 1:24) {
tabla_marcas <- rbind(tabla_marcas, data.frame(Speed = (tablaP[i+1,1] + tablaP[i,1]) / 2, Power = (tablaP[i+1,2] + tablaP[i,2]) / 2, CP = (tablaP[i+1,3] + tablaP[i,3]) / 2))
}
#tablaP[order(tablaP[,1]),]
prob <- pweibull(tabla_marcas[,1], 1.8, 5)
probabi <- c()
porwerdif <- c()
for (i in 1:length(prob)-1) {
probabi <- c(probabi, prob[i+1] - prob[i])
powerdif <- c(porwerdif, (tabla_marcas[i+1,2] + tabla_marcas[i,2]) / 2 )
prod <- probabi*powerdif
}
enerAnual <- 8760*sum(prod)
enerAnual
wt(wd10, wtgData, ane = 1, model = "E33", iner = 10)
wt(wd10, wtgData, ane = 1, model = "E33", inter = 10)
wt(wd10, wtgData, ane = 1, model = "E48", inter = 10)
wt(wd10, wtgData, ane = "ane10", model = "E48", inter = 10)
str(wd10)
tabla
marcas
tablaP
tabla <- tableWD(wd10, ane="ane10", type="histogram")
marcas <- (tabla[,1] + tabla[,2]) / 2
tablaP <- wtgData$E48$data
for (i in 1:24) {
tabla <- rbind(tabla, data.frame(Speed = (tablaP[i+1,1] + tablaP[i,1]) / 2, Power = (tablaP[i+1,2] + tablaP[i,2]) / 2, CP = (tablaP[i+1,3] + tablaP[i,3]) / 2))
}
tablaP
tabla
for (i in 1:24) {
tablaP <- rbind(tablaP, data.frame(Speed = (tablaP[i+1,1] + tablaP[i,1]) / 2, Power = (tablaP[i+1,2] + tablaP[i,2]) / 2, CP = (tablaP[i+1,3] + tablaP[i,3]) / 2))
}
tablaP
tablaP[order(tablaP[,1]),]
tablaP
tablaP[order(tablaP[,1]),]
tablaP <- tablaP[order(tablaP[,1]),]
tablaP
prob <- pweibull(tablaP[,1], 1.8, 5)
probabi <- c()
porwerdif <- c()
for (i in 1:length(prob)-1) {
probabi <- c(probabi, prob[i+1] - prob[i])
powerdif <- c(porwerdif, (tabla_marcas[i+1,2] + tabla_marcas[i,2]) / 2 )
prod <- probabi*powerdif
}
enerAnual <- 8760*sum(prod)
enerAnual
prod
probabi
powerdif
for (i in 1:length(prob)-1) {
probabi <- c(probabi, prob[i+1] - prob[i])
powerdif <- c(porwerdif, (tablaP[i+1,2] + tablaP[i,2]) / 2 )
prod <- probabi*powerdif
}
enerAnual <- 8760*sum(prod)
enerAnual
prod
sum(prod)
enerAnual
tablaP
wtgData$E48$data
probabi
powerdif
for (i in 1:length(prob)-1) {
probabi <- c(probabi, prob[i+1] - prob[i])
powerdif <- c(porwerdif, (tablaP[i+1,2] + tablaP[i,2]) / 2 )
prod <- probabi*powerdif
return(powerdif)
return(probabi)
}
for (i in 1:length(prob)-1) {
probabi <- c(probabi, prob[i+1] - prob[i])
powerdif <- c(porwerdif, (tablaP[i+1,2] + tablaP[i,2]) / 2 )
prod <- probabi*powerdif
print(powerdif)
print(probabi)
}
for (i in 1:length(prob)-1) {
probabi <- c(probabi, prob[i+1] - prob[i])
powerdif <- c(porwerdif, (tablaP[i+1,2] + tablaP[i,2]) / 2 )
prod <- probabi*powerdif
}
for (i in 1:length(prob)-1) {
probabi <- c(probabi, prob[i+1] - prob[i])
powerdif <- c(porwerdif, (tablaP[i+1,2] + tablaP[i,2]) / 2 )
prod <- probabi*powerdif
print(powerdif)
}
prod
prod
sum(prod)
enerAnual <- 8760*sum(prod)
enerAnual
tabla <- tableWD(wd10, ane="ane10", type="histogram")
marcas <- (tabla[,1] + tabla[,2]) / 2
tablaP <- wtgData$E48$data
tabla_marcas <- data.frame()
for (i in 1:24) {
tablaP <- rbind(tablaP, data.frame(Speed = (tablaP[i+1,1] + tablaP[i,1]) / 2, Power = (tablaP[i+1,2] + tablaP[i,2]) / 2, CP = (tablaP[i+1,3] + tablaP[i,3]) / 2))
}
tablaP <- tablaP[order(tablaP[,1]),]
prob <- pweibull(tablaP[,1], 1.8, 5)
probabi <- c()
porwerdif <- c()
for (i in 1:length(prob)-1) {
probabi <- c(probabi, prob[i+1] - prob[i])
powerdif <- c(porwerdif, (tablaP[i+1,2] + tablaP[i,2]) / 2 )
prod <- probabi*powerdif
print(powerdif)
}
enerAnual <- 8760*sum(prod)
enerAnual
wtgData[["E48"]]
wtgData[["E48"]]$data
wtgData["E48"]$data
wt2 <- function (datawd, datawtg, ane, model) {
tp <- datawtg[[model]]$data
l <- length(tp[,1])
for (i in 1:length(l)-1) {
tp <- rbind(tp, data.frame(Speed = (tp[i+1,1] + tablaP[i,1]) / 2, Power = (tp[i+1,2] + tp[i,2]) / 2, CP = (tp[i+1,3] + tp[i,3]) / 2))
}
tp <- tp[order(tp[,1]),]
prob <- pweibull(tp[,1], 1.8, 5)
probabi <- c()
porwerdif <- c()
for (i in 1:length(prob)-1) {
probabi <- c(probabi, prob[i+1] - prob[i])
powerdif <- c(porwerdif, (tablaP[i+1,2] + tablaP[i,2]) / 2 )
prod <- probabi*powerdif
}
enerAnual <- 8760*sum(prod)
print(enerAnual)
}
wt2 <- function (datawtg, ane, model) {
tp <- datawtg[[model]]$data
l <- length(tp[,1])
for (i in 1:length(l)-1) {
tp <- rbind(tp, data.frame(Speed = (tp[i+1,1] + tablaP[i,1]) / 2, Power = (tp[i+1,2] + tp[i,2]) / 2, CP = (tp[i+1,3] + tp[i,3]) / 2))
}
tp <- tp[order(tp[,1]),]
prob <- pweibull(tp[,1], 1.8, 5)
probabi <- c()
porwerdif <- c()
for (i in 1:length(prob)-1) {
probabi <- c(probabi, prob[i+1] - prob[i])
powerdif <- c(porwerdif, (tablaP[i+1,2] + tablaP[i,2]) / 2 )
prod <- probabi*powerdif
}
enerAnual <- 8760*sum(prod)
print(enerAnual)
}
wt2 <- function (datawtg, model) {
tp <- datawtg[[model]]$data
l <- length(tp[,1])
for (i in 1:length(l)-1) {
tp <- rbind(tp, data.frame(Speed = (tp[i+1,1] + tablaP[i,1]) / 2, Power = (tp[i+1,2] + tp[i,2]) / 2, CP = (tp[i+1,3] + tp[i,3]) / 2))
}
tp <- tp[order(tp[,1]),]
prob <- pweibull(tp[,1], 1.8, 5)
probabi <- c()
porwerdif <- c()
for (i in 1:length(prob)-1) {
probabi <- c(probabi, prob[i+1] - prob[i])
powerdif <- c(porwerdif, (tablaP[i+1,2] + tablaP[i,2]) / 2 )
prod <- probabi*powerdif
}
enerAnual <- 8760*sum(prod)
print(enerAnual)
}
wt2(wtgData, model ="E48")
wt(wd10, wtgData, ane = "ane10", model ="E48", inter = 10)
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wtgData, model ="E48")
shiny::runApp()
shiny::runApp()
fitWD(wd10, ane = "ane10")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd10, wtgData, ane = "ane10", model ="E48")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd10, wtgData, ane = "ane10", model ="E48")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd10, wtgData, ane = "ane10", model ="E48", dist = "weibull")
wt2(wd10, wtgData, ane = "ane10", model ="E48", dist = "gamma")
library("WindResource")
# data(wtgData)
# wd10$dir$ang_16 <- (wd10$dir$sect_16-1)*22.5
# class(wd10)<-"windata"
# dataGUIwd<-wd10
# print(getwd())
# load(file=paste(path.package("WindResource"),"/shiny/dataGUIwd.Rd",sep=""))
data(wdOlavarria)
data(wdMtTom)
data(wd)
data(wd10)
data(wtgData)
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd10, wtgData, ane = "1", model = "E33", inter = 10)
wt(wd10, wtgData, ane = 1, model = "E33", inter = 10)
wt(wd, wtgData, ane = 1, model = "E33", inter = 10)
wt(wd, wtgData, ane = 1, model = "E48", inter = 10)
wt(wd10, wtgData, ane = 1, model = "E48", inter = 10)
wt(wd10, wtgData, ane = 1, model = "E48", inter = 60)
wt2(wd10, wtgData, ane = 1, model = "E48")
wt2(wd10, wtgData, ane = 1, model = "E48", dist = "Weibull" )
wt2 <- function (datawd, datawtg, ane, model, dist) {
tp <- datawtg[[model]]$data
fit <- fitWD(datawd, ane = ane)
param1 <- switch(dist, weibull = fit$K, gamma = fit$alpha, lognormal = fit$meanlog)
param2 <- switch(dist, weibull = fit$A, gamma = fit$beta, lognormal = fit$sdlog)
prob <- switch(dist, weibull = pweibull(tp[,1], param1, param2), gamma = pgamma(tp[,1], param1, param2), lognormal = plnorm(tp[,1], param1, param2))
l <- length(tp[,1])
for (i in 1:length(l)-1) {
tp <- rbind(tp, data.frame(Speed = (tp[i+1,1] + tablaP[i,1]) / 2, Power = (tp[i+1,2] + tp[i,2]) / 2, CP = (tp[i+1,3] + tp[i,3]) / 2))
}
tp <- tp[order(tp[,1]),]
probabi <- c()
porwerdif <- c()
for (i in 1:length(prob)-1) {
probabi <- c(probabi, prob[i+1] - prob[i])
powerdif <- c(porwerdif, (tablaP[i+1,2] + tablaP[i,2]) / 2 )
prod <- probabi*powerdif
}
enerAnual <- 8760*sum(prod)
return(enerAnual)
}
wt2(wd, wtgData, ane = 1, model = "E48", dist = "Weibull" )
wt2(wd, wtgData, ane = 1, model = "E48", dist = "Weibull" )
source('~/GitHub/WindResource/R/fitWd.R')
wt2(wd, wtgData, ane = 1, model = "E48", dist = "Weibull" )
wd$ane[[1]]$ave
str(wd)
wd$ane[[1]]
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "Weibull" )
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "Weibull" )
wt2(wd10, wtgData, ane = "ane1", model = "E48", dist = "Weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd10, wtgData, ane = "ane1", model = "E48", dist = "Weibull" )
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "Weibull" )
wt2(wd, wtgData, ane = "ane10", model = "E33", dist = "Weibull" )
fitWD(wd, ane = "ane10")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E33", dist = "Weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E33", dist = "Weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E33", dist = "Weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E33", dist = "Weibull" )
wt2(wd, wtgData, ane = "ane10", model = "E33", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E33", dist = "weibull" )
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
wt(wd, wtgData, ane = "ane10", model = "E33", inter = 10 )
wt(wd, wtgData, ane = "ane10", model = "E33", inter = 1 )
wt(wd, wtgData, ane = "ane10", model = "E33", inter = 60)
wtgData
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model = "E33", inter = 1)
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model = "E33", inter = 1)
wt(wd, wtgData, ane = "ane10", model = "E33", inter = 1) * 8760
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model = "E33", inter = 1) * 8760
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model = "E33", inter = 1) * 8760
wtgData
hist(wd$ane[["ane10"]]$ave)
66 * 8060
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
wt(wd, wtgData, ane = "ane10", model = "E48", inter = 1) * 8760
wt2(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull" )
wt2(wd, wtgData, ane = "ane10", model = "E33", dist = "weibull" )
wt(wd, wtgData, ane = "ane10", model = "E33", inter = 1) * 8760
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
shiny::runApp()
shiny::runApp()
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model ="E33")
wt(wd, wtgData, ane = "ane10", model ="E33", dist = "weibull")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model ="E33")
wt(wd, wtgData, ane = "ane10", model ="E33", dist = "weibull")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model ="E33", dist = "weibull")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model ="E33", dist = "weibull")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model ="E33", dist = "weibull")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model ="E33", dist = "weibull")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model ="E33", dist = "weibull")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model ="E33", dist = "weibull")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model ="E33", dist = "weibull")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model ="E33", dist = "weibull")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model ="E33", dist = "weibull")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, wtgData, ane = "ane10", model ="E33", dist = "weibull")
wt(wd, wtgData, ane = "ane10", model ="E33")
wt(wd, wtgData, ane = "ane10", model ="E48")
wt(wd, wtgData, ane = "ane10", model ="E48", dist = "weibull")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
dat = data.frame (dose = rep(c(0,0.001,0.01,0.1,1,10), e=5),
cm= c(6, 5.1, 4.8, 4.6, 5.5, 4.8, 4.5, 4.8, 4.9, 4.9, 4, 4.5, 4.8, 4.1, 4.1,
3.1, 3.5, 3.8, 3, 3, 2.1, 2.5, 2.8, 2, 2, 1.1, 1.5, 1.8, 1, 1)
); attach(dat);dat; plot(dat)
dat= read.csv("ce50_2014.csv", dec=",", header=T, sep=",")
mdat= aggregate(cm ~ dose, data = dat, mean); mdat
mdat=mdat[with(mdat, order(local,iso,ia,dose)), ]
#write.csv(mdat, file="ce50_2015.csv", row.names=FALSE)
dat1=within(mdat, {ctrl <- ave(cm, FUN=function(x) 1-(x/max(x)))})
dat1=dat1[-1,-2];dat1;plot(dat1, pch=19, cex=0.7)
# Fit model ##
mod=glm(ctrl~ log(dose), data=dat1,family = binomial(link="probit"))
summary(mod)
plot(dat1$dose,dat1$ctrl, xlab = "dose",ylab = "prob",pch=19, cex=0.7)
ld <- seq(0, 10, 0.1)
lines(ld, predict(mod, data.frame(dose = ld), type = "response", col="red"))
abline(h=0.5, lty=3)
dose50 = exp({log(0.5/(1-0.5)) - coef(mod)[[1]]} / coef(mod)[[2]])
abline(v=dose50, lty=3,col="red")
azox <- data.frame( CE= "ce50", dose =dose50[[1]])
azox[, c("p", "se")] <- predict(mod, type = "response", se.fit = TRUE)[-3];azox
mod=glm(ctrl~ log(dose), data=dat1,family = binomial(link="logit"))
summary(mod)
plot(dat1$dose,dat1$ctrl, xlab = "dose",ylab = "prob",pch=19, cex=0.7)
ld <- seq(0, 10, 0.1)
lines(ld, predict(mod, data.frame(dose = ld), type = "response", col="red"))
abline(h=0.5, lty=3)
dose50 = exp({log(0.5/(1-0.5)) - coef(mod)[[1]]} / coef(mod)[[2]])
abline(v=dose50, lty=3,col="red")
azox <- data.frame( CE= "ce50", dose =dose50[[1]])
azox[, c("p", "se")] <- predict(mod, type = "response", se.fit = TRUE)[-3];azox
summary(mod)
azox[, c("p", "se")] <- predict(mod, type = "response", se.fit = TRUE)[-3];azox
predict(mod, type = "response", se.fit = TRUE)[-3]
library(devtools)
install_github("mbonoli/WindResource")
wt(wd, dataWtg, ane = "ane10", model = "E33")
source.with.encoding('~/GitHub/WindResource/R/power.R', encoding='UTF-8')
wt(wd, dataWtg, ane = "ane10", model = "E33")
library("WindResource")
# wd10$dir$ang_16 <- (wd10$dir$sect_16-1)*22.5
# class(wd10)<-"windata"
# dataGUIwd<-wd10
# data(wtgData)
# print(getwd())
# load(file=paste(path.package("WindResource"),"/shiny/dataGUIwd.Rd",sep=""))
data(wdMtTom)
data(wdOlavarria)
data(wd)
data(wd10)
data(wtgData)
wt(wd, dataWtg, ane = "ane10", model = "E33")
wt(wd, wtgData, ane = "ane10", model = "E33")
wt(wd, wtgData, ane = "ane10", model = "E48")
wt(wd, wtgData, ane = "ane10", model = "E48" dist = "weibull")
wt(wd, wtgData, ane = "ane10", model = "E48" dist = "Weibull")
wt(wd, wtgData, ane = "ane10", model = "E48" dist = "Weibull")
wt(wd, wtgData, ane = "ane10", model = "E48", dist = "weibull")
wt(wd, wtgData, ane = "ane10", model = "E3", dist = "weibull")
wt(wd, wtgData, ane = "ane10", model = "E33", dist = "weibull")
library("WindResource")
# data(wtgData)
# wd10$dir$ang_16 <- (wd10$dir$sect_16-1)*22.5
# class(wd10)<-"windata"
# dataGUIwd<-wd10
# print(getwd())
# load(file=paste(path.package("WindResource"),"/shiny/dataGUIwd.Rd",sep=""))
data(wdOlavarria)
data(wd)
data(wdMtTom)
data(wd10)
data(wtgData)
shiny::runApp()
plotWD(wdMtTom, ane="Anem24aMS", type="histogram")
library("WindResource")
# data(wtgData)
# wd10$dir$ang_16 <- (wd10$dir$sect_16-1)*22.5
# class(wd10)<-"windata"
# dataGUIwd<-wd10
# print(getwd())
# load(file=paste(path.package("WindResource"),"/shiny/dataGUIwd.Rd",sep=""))
data(wdOlavarria)
data(wdMtTom)
data(wd)
data(wd10)
data(wtgData)
plotWD(wdMtTom, ane="Anem24aMS", type="histogram")
plotWD(wd, ane="ane10", type="histogram")
plotWD(wd, ane="ane1", type="histogram")
plotWD(wd, ane="Ane1", type="histogram")
plotWD(wd, ane="Ane10", type="histogram")
str(wd)
plotWD(wd, ane="Ane1", type="histogram")
plotWD(wdMtTom, ane="Anem24aMS" , type="histogram", by="none")
plotWD(wdMtTom, ane="Anem24aMS", type="histogram", binwidth=0.2)
plotWD(wdMtTom, ane="Anem24aMS" , type="histogram", by="month")
plotWD(wdMtTom, ane="Anem24aMS", type="histogram", by="none", binwidth=0.2)
MtTom <- read.csv("MtTom-0032_1999-12-01_2002-12-31.dat")
MtTom <- read.csv("wdMtTom.dat")
plotWD(wd, ane="ane10", type="rose", var="min", by="none")
plotWD(wd, ane="ane10", type="rose", var="freq", by="none")
plotWD(wd, ane="Ane1", type="rose", var="freq", by="none")
plotWD(wd, ane="Ane10", type="rose", var="freq", by="none")
plotWD(wdMtTom, ane="Anem24aMS", type="rose", var="min", by="none")
plotWD(wdMtTom, ane="Anem24aMS", type="rose", var="mean", by="none")
plotWD(wd10, ane="Ane10", type="turbulence")
plotWD(wd10, ane="ane10", type="turbulence")
plotWD(wd, ane="ane10", type="boxplot", by="none")
plotWD(wd, ane="Ane1", type="boxplot", by="none")
source('/media/diego/OS/Users/Diego/Documents/GitHub/WindResource/R/plotWD.R')
source('/media/diego/OS/Users/Diego/Documents/GitHub/WindResource/R/plotWD.R')
plotWD(wd, ane="Ane1", type="boxplot", by="none")
str(wd)
str(wd10)
plotWD(wd10, ane="Ane1", type="boxplot", by="none")
source.with.encoding('C:/Users/Diego/Desktop/power.R', encoding='UTF-8')
shiny::runApp()
shiny::runApp()
shiny::runApp()
